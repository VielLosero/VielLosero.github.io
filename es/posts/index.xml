<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Pagina Web de Viel Losero</title>
    <link>/es/posts/</link>
    <description>Recent content in Posts on Pagina Web de Viel Losero</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es</language>
    <lastBuildDate>Fri, 08 Nov 2019 14:44:20 +0200</lastBuildDate>
    
	<atom:link href="/es/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Escapar de systemd: Creando nuestra propia iso kali-i3-viel.</title>
      <link>/es/posts/7-escape-from-systemd/</link>
      <pubDate>Fri, 08 Nov 2019 14:44:20 +0200</pubDate>
      
      <guid>/es/posts/7-escape-from-systemd/</guid>
      <description>Por que escapar de systemd Porque quiero iniciar mi systema de manera kiss, usando lo mínimo necesario para que funcione bien y rápido.
En la mayoría de distros linux vienen activadas por defecto muchas cosas que no se acaban utilizando y usan recursos. Por suerte linux permite configurar el sistema a gusto bajo un control completo, pero &amp;hellip; que pasa si quiero hacerme mi propio sistema de inicio?
Systemd es cada vez mas complicado, es un binario y cambiar cualquier cosa que no este predefinida implica cambiar el código fuente, compilar y probar.</description>
    </item>
    
    <item>
      <title>Privacidad con Firefox: Configuración y script.</title>
      <link>/es/posts/5-firefox-privacy/</link>
      <pubDate>Thu, 24 Oct 2019 06:00:00 +0200</pubDate>
      
      <guid>/es/posts/5-firefox-privacy/</guid>
      <description>Configuración. Hoy en día para navegar con un poco de privacidad podemos: Usar un navegador de texto como linx sin funcionalidades como java, videos, css, &amp;hellip; , usar torbrowser, o configurar firefox para navegar de manera lo mas segura y privada posible.
Copia de seguridad. Lo primero que tenemos que hacer para no perder nuestros datos es una copia de nuestro perfil de firefox, se encuentra bajo el direcotrio de usuario.</description>
    </item>
    
    <item>
      <title>Uso de GPG: Gnu Privacy Guard.</title>
      <link>/es/posts/4-create-a-gpg-key/</link>
      <pubDate>Fri, 18 Oct 2019 10:06:06 +0200</pubDate>
      
      <guid>/es/posts/4-create-a-gpg-key/</guid>
      <description>Creación de las claves publica y privada Para crear las claves GPG podemos utilizar gpg &amp;ndash;generate-key o gpg &amp;ndash;full-generate-key el primer comando nos creará las claves sin preguntarnos otras opciones más que las necesarias. Si queremos un poco mas de control sobre algunas opciones como el tamaño o el periodo de validez usaremos gpg &amp;ndash;full-generate-key.
El tamaño de la clave va relacionado con su seguridad pero también con el rendimiento ya que ha de procesar con números mas largos.</description>
    </item>
    
    <item>
      <title>Hugo generador de páginas web estáticas: Script para generar la configuración inicial.</title>
      <link>/es/posts/3-hugo-script-basic-site/</link>
      <pubDate>Tue, 15 Oct 2019 12:22:20 +0200</pubDate>
      
      <guid>/es/posts/3-hugo-script-basic-site/</guid>
      <description>Código del Script Este script que os dejo a continuación me ha servido para generar este sitio web en sus momento iniciales ya que para mi era un poco incomodo tener que estar editando todos los archivos de uno en uno para hace pruebas y ver el resultado de la configuración de Hugo. Con este script tenemos toda la configuración inicial en un solo archivo para poder hacer pruebas de configuración con Hugo relativamente fácil.</description>
    </item>
    
    <item>
      <title>Hugo generador de páginas web estáticas: Hosting en github.</title>
      <link>/es/posts/2-hosting-hugo-on-github/</link>
      <pubDate>Fri, 11 Oct 2019 19:54:30 +0200</pubDate>
      
      <guid>/es/posts/2-hosting-hugo-on-github/</guid>
      <description>Cuenta de github Despues de mi anterior post donde empiezo con Hugo la creación de una página web con contenido estático, ahora toca alojar dicha página en github.
No voy a entrar en como crear una cuenta en github, podéis seguir las indicaciones para crear la cuenta desde este enlace. Hosting on github
Una vez creada la cuenta github, añadida la clave ssh para la gestión remota y creado el repositorio, crearemos el submódulo.</description>
    </item>
    
    <item>
      <title>Hugo generador de páginas web estáticas: Empezando con Hugo.</title>
      <link>/es/posts/1-hugo-start-how-to/</link>
      <pubDate>Thu, 03 Oct 2019 14:44:20 +0200</pubDate>
      
      <guid>/es/posts/1-hugo-start-how-to/</guid>
      <description>Porqué Hugo Escogí hugo después de comparar los top static site gen y leer un par de posts de jekyll vs hugo, cada uno tendrá sus preferencias. Este és el primer SSG que uso ya que por alguno tenia que empezar, la documentación de Hugo es bastante amplia y fácil de entender.
Instalación de Hugo Instalar Hugo dependerá del sistema operativo que tengamos. En Devian es tan fácil como usar apt.</description>
    </item>
    
  </channel>
</rss>