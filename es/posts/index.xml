<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Pagina Web de Viel Losero</title>
    <link>/es/posts/</link>
    <description>Recent content in Posts on Pagina Web de Viel Losero</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es</language>
    <lastBuildDate>Fri, 18 Oct 2019 10:06:06 +0200</lastBuildDate>
    
	<atom:link href="/es/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Uso de GPG: Gnu Privacy Guard.</title>
      <link>/es/posts/4-create-a-gpg-key/</link>
      <pubDate>Fri, 18 Oct 2019 10:06:06 +0200</pubDate>
      
      <guid>/es/posts/4-create-a-gpg-key/</guid>
      <description>Creación de las claves publica y privada Para crear las claves GPG podemos utilizar gpg &amp;ndash;generate-key o gpg &amp;ndash;full-generate-key el primer comando nos creará las claves sin preguntarnos otras opciones más que las necesarias. Si queremos un poco mas de control sobre algunas opciones como el tamaño o el periodo de validez usaremos gpg &amp;ndash;full-generate-key.
El tamaño de la clave va relacionado con su seguridad pero también con el rendimiento ya que ha de procesar con números mas largos.</description>
    </item>
    
    <item>
      <title>Hugo generador de páginas web estáticas: Script para generar la configuración inicial.</title>
      <link>/es/posts/3-hugo-script-basic-site/</link>
      <pubDate>Tue, 15 Oct 2019 12:22:20 +0200</pubDate>
      
      <guid>/es/posts/3-hugo-script-basic-site/</guid>
      <description>Código del Script Este script que os dejo a continuación me ha servido para generar este sitio web en sus momento iniciales ya que para mi era un poco incomodo tener que estar editando todos los archivos de uno en uno para hace pruebas y ver el resultado de la configuración de Hugo. Con este script tenemos toda la configuración inicial en un solo archivo para poder hacer pruebas de configuración con Hugo relativamente fácil.</description>
    </item>
    
    <item>
      <title>Hugo generador de páginas web estáticas: Hosting en github.</title>
      <link>/es/posts/2-hosting-hugo-on-github/</link>
      <pubDate>Fri, 11 Oct 2019 19:54:30 +0200</pubDate>
      
      <guid>/es/posts/2-hosting-hugo-on-github/</guid>
      <description>Cuenta de github Despues de mi anterior post donde empiezo con Hugo la creación de una página web con contenido estático, ahora toca alojar dicha página en github.
No voy a entrar en como crear una cuenta en github, podéis seguir las indicaciones para crear la cuenta desde este enlace. Hosting on github
Una vez creada la cuenta github, añadida la clave ssh para la gestión remota y creado el repositorio, crearemos el submódulo.</description>
    </item>
    
    <item>
      <title>Hugo generador de páginas web estáticas: Empezando con Hugo.</title>
      <link>/es/posts/1-hugo-start-how-to/</link>
      <pubDate>Thu, 03 Oct 2019 14:44:20 +0200</pubDate>
      
      <guid>/es/posts/1-hugo-start-how-to/</guid>
      <description>Porqué Hugo Escogí hugo después de comparar los top static site gen y leer un par de posts de jekyll vs hugo, cada uno tendrá sus preferencias. Este és el primer SSG que uso ya que por alguno tenia que empezar, la documentación de Hugo es bastante amplia y fácil de entender.
Instalación de Hugo Instalar Hugo dependerá del sistema operativo que tengamos. En Devian es tan fácil como usar apt.</description>
    </item>
    
  </channel>
</rss>